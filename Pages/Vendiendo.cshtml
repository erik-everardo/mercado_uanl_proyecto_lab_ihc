@page
@model mercado_uanl.Pages.Vendiendo

@{
    Layout = null;
}
@*Esta pagina regresa los productos que vende el usuario en forma de cards*@
@*Recibe obligatoriamente usuario (id) y password. Opcionalmente recibe un parametro que indica si quiere los reciente*@
@*Querer los recientes quiere decir que regresa hasta los ultimos tres publicados. Esto se pide para ponerlo en la*@
@*pantalla "Principal"*@
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(HttpContext).RequestToken;
    }
}
@*Genera el encabezado correspondiente, dependiendo si es para los <<recientes>> o <<todos mis productos>>*@
@*Se asegura de que haya al menos un elemento en la lista, si no no muestra el encabezado correspondiente*@
@if (Model.Recientes && Model.ProductosDelUsuario.Count > 0)
{
    <h4 class="my-2">Acabo de publicar</h4>
}
else if(Model.ProductosDelUsuario.Count > 0)
{
    <h4 class="my-2" id="iraproductos">Mis productos</h4> 
}
else if(Model.Recientes && Model.ProductosDelUsuario.Count == 0)
{
    <h4 class="my-2" >Acabo de publicar</h4>
    <div class="alert alert-info">
        <div class="alert-heading">No hay nada que mostrar</div>
    </div>
}
else
{
    <h4 class="my-2" id="iraproductos">Mis productos</h4> 
    <div class="alert alert-info">
        <div class="alert-heading">No hay nada que mostrar</div>
    </div>
}
@*Genera los cards*@
<div class="list-group">
  @foreach(var Producto in Model.ProductosDelUsuario)
  {
      <div href="#" class="list-group-item">
          <div class="d-flex w-100 justify-content-between">
              <h5 class="mb-5">@Producto.Nombre</h5>
              <p><strong>$@Producto.Precio</strong></p>
          </div>
          <div class="contenedor_imagen">
              <img class="imagen-producto" src="img-prueba-vertical.jpg"/>
          </div>
          
              
          <div class="d-flex w-100 justify-content-end">
              <button data-id="id" class="btn btn-primary mx-1" disabled><i class="fas fa-edit"></i></button>
              <button
                  data-id="id" class="btn btn-warning"
                  onclick="OcultarDesocultarProducto(@Producto.IdUsuario,@Model.Usuario.Password,@Producto.Id,'@GetAntiXsrfRequestToken()')">
                                                       
                  @if (Producto.Publico)
                  {
                      <i class="far fa-eye-slash"></i>
                  }
                  else
                  {
                      <i class="fas fa-eye"></i>
                  }
              </button>
              <button data-id="id" class="btn btn-danger mx-1" onclick="eliminarProducto(@Producto.IdUsuario,@Model.Usuario.Password,@Producto.Id,'@GetAntiXsrfRequestToken()')"><i class="fas fa-trash"></i></button>
          </div>
      </div>
  }  
</div>

@*Muestra link solo si hay al menos un producto que mostrar y son los recientes*@
@if (Model.Recientes & Model.ProductosDelUsuario.Count > 0)
{
    <a href="#" onclick="clickEnVender(true)">Ver todos mis productos</a>
}